<div class="container fit-content">
  <div class="my-5">
    <h2>新規投稿</h2>
    <%= form_with model: @post, url: posts_path, html: {name: 'form'} do |f| %>
    <%= render "layouts/form_errors", model: @post %>
    <div class="margin-y mx-auto">
      <div class="field">
        <div class="d-flex padding-sm-y">
          <%= f.label :post_image, "画像", class: "label-width" %>
          <div>
            <%= f.file_field :post_image, accept: "image/*" %>
                <div class='js-croppie crop-preview' style='display: none;'></div>
                <!--
                クロッピング用のボタンを反映させたい場合
                <button type="button" class='btn btn-secondary' id="js-croppie-result">GetResult</button>
                -->
          </div>
        </div>
        <%= render "layouts/post_form", f: f %>
      </div>
    </div>
    <div class="actions text-center padding-sm-y">
      <%= button_tag "投稿", type: 'button', class: "btn btn-success padding-x", onclick: 'cropAndSubmit()' %>
    </div>
    <% end %>
  </div>
</div>

<script>
var filename = ""

//画像をクロッピングして「ファイル選択」フォームに置き換える
function cropImage() {
  $('.js-croppie').croppie('result', {type: 'blob'}).then(function(data) {
    const file = new File([data], filename, {type: "image/png"})

    const container = new DataTransfer()
    container.items.add(file)

    document.querySelector('#post_post_image').files = container.files
    // document.querySelector('#post_post_image').dispatchEvent(new Event('change', {'bubbles': true}))
  })
}

//クロッピングして送信
function cropAndSubmit(e) {
  cropImage();              // cropImage呼び出し
  setTimeout(function () {  // cropImageの処理待ちで0.5秒
    document.form.submit(); // フォームの送信
  }, 250);
}

//「ファイル選択」内に画像が入った場合、プレビューをする
$(function() {
  $('#post_post_image').change(function(e) {
    const reader = new FileReader();
    const file = e.target.files[0];
    filename = file.name;
    reader.onload = function() {
      $('.js-croppie').show()
      $('.js-croppie').croppie('destroy')
      const elm = $('.js-croppie').croppie({
        viewport: {
          width: 200,
          height: 200
        }
      })
      elm.croppie('bind', {
          url: reader.result,
          points: [0, 0, 200, 200],
      })
    }
    reader.readAsDataURL(file)
  })

  /*
  // クロッピング用のボタンを反省させた場合の処理内容
  $('#js-croppie-result').click(function() {
    cropImage();
  })
  */
})
</script>
